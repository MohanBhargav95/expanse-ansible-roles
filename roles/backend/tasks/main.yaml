- name: disable default nodejf
  ansible.builtin.command: dnf module disable nodejs -y

- name: enable nodejs 20
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: install nodejs
  ansible.builtin.package: 
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql  

- name: creating expense user
  ansible.builtin.user:
    name: expense

- name: import tasks from common roles
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req



- name: extract the file
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes  #This section will execute in remote server and not Ansible server

- name: installing the dependencies
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: copying the backend service file to machine 
  ansible.builtin.template:
    src: backend.service.j2
    dest: /etc/systemd/system/backend.service

- name: install PyMySQL and cryptography
  ansible.builtin.pip:
    name:
    - PyMySQL
    - cryptography
    executable: pip3.9

- name: import mysql data
  community.mysql.mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_host: "{{ login_host }}"
    target: /app/schema/backend.sql
    name: all
    state: import

- name: daemon reload
  ansible.builtin.systemd_service:
    daemon_reload: true
    state: restarted
    name: backend